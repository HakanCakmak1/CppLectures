Ders 22: Static Members

Static data members:
	static int x;

	Sınıfın nesnesine ait değil
	Aslında bildiğimiz global değişken, dil katmanında sınıfa ait görünüyor

	Sınıf nesnesinin hayatıyla alakası yok nesne olmadan hayata geliyorlar

	class MyClass
	{
		static int x; 
	};
	Üstteki static int x; ifadesi definition değil sadece declaration(non-defining declaration)

	Definition yoksa compiler'da değil linker kısmında hata verir.
	Definitionda static keyword'u kullanılmamalı

	Static data members zero initialize edilir

	Static data members incomplete type olabilir
	class OtherClass;
	class MyClass
	{
		static OtherClass otherClass;
	};

	Aynı şekilde bir sınıfın kendi türünden statik veri elemanına sahip olması geçerlidir
	class MyClass
	{
		static MyClass myClass;
	};

	class MyClass
	{
	public:
		int mx;
	};
	MyClass m;
	m.mx = 5; 

	Üstteki atama geçerli

	Statik veri elemanlarının initialization'ı main çağrılmadan önce yapılır.

	int MyClass::mx{};
	şeklinde initialize edilmesi gerekiyor.

	this->mx şeklinde erişim yapılabilir.

	Ancak constuctor initializer list ile initialize edilemez.

	Old C++ dahil const static ve tam türlerinden data memberları class definition içerisinde initalize edilebilir
	(int, bool, enum)

	Static initialization fiasco static data members için de geçerli

	C++17 standardı ile global variables and static data members can be inline